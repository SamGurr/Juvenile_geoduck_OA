rm(list=ls())
## Install packages if not already in your library
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
#if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("ggplot2" %in% rownames(installed.packages()) == 'FALSE') install.packages('ggplot2')
if ("ggpubr" %in% rownames(installed.packages()) == 'FALSE') install_github('ggpubr')
?LoLinR
library(MASS)
boxcox(size_EXP2.0$shell_size))
rm(list=ls())
# Install packages if not already in your library
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
#if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("ggplot2" %in% rownames(installed.packages()) == 'FALSE') install.packages('ggplot2')
if ("ggpubr" %in% rownames(installed.packages()) == 'FALSE') install_github('ggpubr')
if ("Rmisc" %in% rownames(installed.packages()) == 'FALSE') install.packages('Rmisc')
#if ("nlme" %in% rownames(installed.packages()) == 'FALSE') install.packages('nlme')
#if ("lme4" %in% rownames(installed.packages()) == 'FALSE') install.packages('lme4')
if ("plotrix" %in% rownames(installed.packages()) == 'FALSE') install.packages('plotrix')
if ("lsmeans" %in% rownames(installed.packages()) == 'FALSE') install.packages('lsmeans')
if ("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
if ("reshape" %in% rownames(installed.packages()) == 'FALSE') install.packages('reshape')
if ("multcompView" %in% rownames(installed.packages()) == 'FALSE') install.packages('multcompView')
if ("lmtest" %in% rownames(installed.packages()) == 'FALSE') install.packages('lmtest')
if ("car" %in% rownames(installed.packages()) == 'FALSE') install.packages('car')
#if ("tidyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('tidyr')
#if ("Rcmdr" %in% rownames(installed.packages()) == 'FALSE') install.packages('Rcmdr')
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
#library(plyr)           # Version 1.8.4, Packaged: 2016-06-07, Depends: R (>= 3.1.0) Imports: Rcpp (>= 0.11.0)
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
#library(nlme)           # Version: 3.1-137, Date: 2018-04-07, Depends: R (>= 3.4.0) Imports: graphics, stats, utils, lattice
#library(lme4)           # Version: 1.1-17, Date/Publication: 2018-04-03, Depends: R (>= 3.2.0), Matrix (>= 1.2-1), methods, stats
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
library(gridExtra)      # Version: 2.3, Date/Publication: 2017-09-09, Imports: gtable, grid, grDevices, graphics, utils
library(reshape)        # Version: 0.8.7, Date/Publication: 2017-08-06, Depends: R (>= 2.6.1) Imports: plyr
library(multcompView)   # Version: 0.1-7, Date/Publication: 2015-07-31, Imports: grid
#library(tidyr)          # Version: 0.8.1, Date/Publication: 2018-05-18, Depends: R (>= 3.1) Imports: dplyr (>= 0.7.0), glue, magrittr, purrr, Rcpp, rlang, stringi, tibble, tidyselect
#library(Rcmdr)          # Version: 2.5-1. Date/Publication: 2018-09-11, Depends: R (>= 3.5.0), grDevices, graphics, methods, stats, utils,splines, RcmdrMisc (>= 2.5-0), car (>= 3.0-1), effects (>=4.0-3) Imports: tcltk, tcltk2 (>= 1.2-6), abind, relimp (>= 1.0-5)
library(Rmisc)
library(lmtest)
library(car)
#Required Data files
# ----Conical Chemist
#Load Size Data
size<-read.csv("Data/Shell.Length/Length.30d.Exposure.csv", header=T, sep=",", na.string="NA", as.is=T)
size <- tibble::rowid_to_column(size, "ID") # add unique rownumber column to ID animals
# DATASETS FOR EXPOSURES 1 AND 2
size_EXP1_with_PreExposure <- subset(size, Exp.Num=="Exp1") # all Exp1 data
size_EXP1 <- subset(size_EXP1_with_PreExposure, trial!="prebasal") # Exp1 without Day 0
size_EXP1_PreExposure <- subset(size_EXP1_with_PreExposure, Day=="prebasal") # Seperate Day 0 of Exp 1 for Figure
size_EXP1_PreExposure$Day <- "0" # name day as 0 (before it was "prebasal")
#Load Size Data
size<-read.csv("Data/Shell.Length/Length.30d.Exposure.csv", header=T, sep=",", na.string="NA", as.is=T)
size <- tibble::rowid_to_column(size, "ID") # add unique rownumber column to ID animals
# DATASETS FOR EXPOSURES 1 AND 2
size_EXP1_with_PreExposure <- subset(size, Exp.Num=="Exp1") # all Exp1 data
size_EXP1 <- subset(size_EXP1_with_PreExposure, trial!="prebasal") # Exp1 without Day 0
#set working directory--------------------------------------------------------------------------------------------------
setwd("C:/Users/samjg/Documents/My_Projects/Juvenile_geoduck_OA/RAnalysis/") #set working
#Load Size Data
size<-read.csv("Data/Shell.Length/Length.30d.Exposure.csv", header=T, sep=",", na.string="NA", as.is=T)
size <- tibble::rowid_to_column(size, "ID") # add unique rownumber column to ID animals
# DATASETS FOR EXPOSURES 1 AND 2
size_EXP1_with_PreExposure <- subset(size, Exp.Num=="Exp1") # all Exp1 data
size_EXP1 <- subset(size_EXP1_with_PreExposure, trial!="prebasal") # Exp1 without Day 0
size_EXP1_PreExposure <- subset(size_EXP1_with_PreExposure, Day=="prebasal") # Seperate Day 0 of Exp 1 for Figure
size_EXP1_PreExposure$Day <- "0" # name day as 0 (before it was "prebasal")
size_EXP1_all <- rbind(size_EXP1_PreExposure, size_EXP1) # merge two datasets for the first size figure Exp 1
size_EXP2 <- subset(size, Exp.Num=="Exp2") # all Exp 2
size_EXP2.d0 <- subset(size_EXP2, Day==0)
size_EXP2.d0$Treat1_Treat2 <- size_EXP2.d0$Init.Trt # merge column or initial treat as treat1_treat2 for Exp2 figure
size_EXP2.0 <-subset(size_EXP2, Day!=0) # Exp 2 without day 0
size_EXP2_all <- rbind(size_EXP2.d0, size_EXP2.0) # merge two datasets for the first size figure Exp 2
size_Exp1.T<- merge(size_EXP1, size_EXP2, by=c("tank"))  #merge to obtained combined treatments from EXP2
inital_size <- subset(size_EXP1, Date=="20180716") # get starting size of indiivduals from first measurements
StartSize <- summarySE(inital_size, measurevar="shell_size", groupvars=c("Date")) #summary table for starting shell length = 5.077962 ± 0.6622871 (mean ± SD)
end_size <- subset(size_EXP1, Date=="20180724") # view the efinal size on Day 10 of exposure 1
# plot end of exp 1 Day 10 with treatments
length_EXP1_Day10 <- ggplot(end_size, aes(x = treatment, y = shell_size, fill = treatment)) +
geom_boxplot(alpha = 0.1) + scale_color_grey() + scale_fill_grey() + theme_classic() +
ylim(2,8.2) +
geom_point(pch = 19, position = position_jitterdodge(0.1), size=1) +
#geom_point(aes(fill = treatment), size = 0.5, shape = 21, position = position_jitterdodge(0.05)) +
stat_summary(fun.y=mean, geom="point", pch="+", size=3, position = position_jitterdodge(0.01)) +
theme(legend.position = c(.92, .9), legend.text=element_text(size=8)) +
labs(y="shell length", x = "Treatment", fill="")
length_EXP1_Day10
### EXP1 ####
#plot treatments and time (with prePreExposure)
Exp1.Fig.size.A <- ggplot(size_EXP1_all, aes(x = factor(Day), y = shell_size, fill = treatment)) +
theme_classic() +
scale_fill_manual(values=c("white", "grey3"), labels=c("Ambient","Elevated")) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19, position = position_jitterdodge(.05), size=1) +
stat_summary(fun.y=mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..),
width = 0.6, size=0.4, linetype = "dashed", position = position_dodge(preserve = "single")) +
theme(legend.position = c(0.55,0.96), legend.direction="horizontal", legend.title=element_blank()) +
geom_vline(xintercept=c(1.5), linetype="dotted", size=1) +
ylim(2,8.2) +
scale_x_discrete(limits=c("0",2,5,8,10)) +
labs(y=expression("Shell length"~(mm)), x=expression("Days"))
Exp1.Fig.size.B <- Exp1.Fig.size.A +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5, size=13,color="black"),
axis.text.y = element_text(angle = 0, hjust = 0.5, size=13,color="black"),
axis.line = element_line(color = 'black'),
axis.ticks.length=unit(0.2, "cm"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) +
scale_y_continuous(limits = c(2, 8), expand = c(0, 0))
Exp1.Fig.size.B # view the plot
# Two-Way anova for shell size under Initial OA Exposure
hist(size_EXP1$shell_size) # view histogram - has negative skew
shapiro.test(size_EXP1$shell_size) # not normally distributed, run the model and check residuals
# run the model
EXP1.size.aov.mod <- aov(shell_size ~ Init.Trt * Day, data = size_EXP1) # run anova on treatment and time
anova(EXP1.size.aov.mod) # significant effect of time; no effect from treatment
# test model residuals
shapiro.test(residuals(EXP1.size.aov.mod)) # not normally distributed - use transformed model
# Two-Way anova (transformed)
# reflect sqr root transformation to minimize negative skew
max(size_EXP1$shell_size) # max value = 6.859
EXP1.size.sqrt <- sqrt((6.859 + 1) - size_EXP1$shell_size) # reflect and square root (reflect = [(max value + 1) - x]
hist(EXP1.size.sqrt) # seems to have solved the skewness in historgram
shapiro.test(EXP1.size.sqrt) # normally distributed
# run the model on transformed data
EXP1.size.aov.modTRANS <- aov(EXP1.size.sqrt ~ Init.Trt * Day, data = size_EXP1) # run anova on treatment and time
anova(EXP1.size.aov.modTRANS) # significant effect of time; no effect from treatment
# test model residuals
shapiro.test(residuals(EXP1.size.aov.modTRANS)) # normal p-value = 0.1394
# Levene's test for homogeneity
leveneTest(EXP1.size.aov.modTRANS) # p 0.4352
# plot the residuals
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP1.size.aov.modTRANS)) #plot histogram of residuals
boxplot(residuals(EXP1.size.aov.modTRANS)) #plot boxplot of residuals
plot(fitted(EXP1.size.aov.modTRANS),residuals(EXP1.size.aov.modTRANS))
qqnorm(residuals(EXP1.size.aov.modTRANS)) # qqplot
# plot and test model for heteroscedasticity
plot(lm(EXP1.size.aov.modTRANS))
TukeyHSD(EXP1.size.aov.modTRANS, "Day") # quick method
bptest(lm(EXP1.size.aov.modTRANS))  # Breusch-Pagan test p-value = 0.27
exp1.size.ph <- lsmeans(EXP1.size.aov.modTRANS, pairwise ~  Init.Trt * Day) # pariwise Tukey Post-hoc test
exp1.size.ph # view post hoc summary diff between days 10 and 2
E1.pairs.SIZE.05 <- cld(exp1.size.ph, alpha=.05, Letters=letters) #list pairwise tests and letter display p < 0.05
E1.pairs.SIZE.05 #view results
E1.pairs.SIZE.1 <- cld(exp1.size.ph, alpha=.1, Letters=letters) #list pairwise tests and letter display p < 0.05
E1.pairs.SIZE.1 #view results
# what is the percent change between days 2 and day 10 (since there is no diff between treatment - group all as a mean)
EXP1_size_Day2 <- size_EXP1 %>% filter(size_EXP1$Day==2) #dataset for day 2
EXP1_size_Day10 <- size_EXP1 %>% filter(size_EXP1$Day==10) # dataset for day 10
Days_2_and_10 <- rbind(EXP1_size_Day2, EXP1_size_Day10) # rbind both datasets
# table for mean shell length days 2 and 10
EXP1_size_table <- aggregate(Days_2_and_10$shell_size, list(Days_2_and_10$Day), mean)
EXP1_percentdiff_size <- (((EXP1_size_table[1,2])-(EXP1_size_table[2,2]))/(EXP1_size_table[2,2]))*100 # 3.6 % increase in shell length days 2 - 10
Exp1.Fig.size_FINAL <-
Exp1.Fig.size.B +
geom_segment(aes(x = 1.6, y = 7.3, xend = 2.4, yend = 7.3)) +
geom_segment(aes(x = 2.6, y = 7.3, xend = 3.4, yend = 7.3)) +
geom_segment(aes(x = 3.6, y = 7.3, xend = 4.4, yend = 7.3)) +
geom_segment(aes(x = 4.6, y = 7.3, xend = 5.4, yend = 7.3)) +
annotate("text", x="2", y=7.2, label = "a", size = 4) + # t-test with p < 0.05 between treatments at day 0
annotate("text", x="5", y=7.2, label = "ab", size = 4) + # add text to the graphic for posthoc letters - effect of time
annotate("text", x="8", y=7.2, label = "ab", size = 4) + # add text to the graphic for posthoc letters - effect of time
annotate("text", x="10", y=7.2, label = "b", size = 4) # add text to the graphic for posthoc letters - effect of time
Exp1.Fig.size_FINAL
### EXP2 ####
#PLOTTING
Exp2.Fig.size.A <- ggplot(size_EXP2_all, aes(x = factor(Day), y = shell_size, fill = Treat1_Treat2)) +
theme_classic() +
scale_fill_manual(values=c("white", "white", "grey80", "grey3", "gray50", "grey3"),
labels=c("Ambient","Ambient × Ambient","Ambient × Elevated","Elevated","Elevated × Ambient","Elevated × Elevated")) +
geom_boxplot(alpha = 0.5, # color hue
width=0.6, # boxplot width
outlier.size=0, # make outliers small
position = position_dodge(preserve = "single")) +
geom_point(pch = 19, position = position_jitterdodge(.05), size=1) +
stat_summary(fun.y=mean, geom = "errorbar", aes(ymax = ..y.., ymin = ..y..),
width = 0.6, size=0.4, linetype = "dashed", position = position_dodge(preserve = "single")) +
theme(legend.position = c(0.55,0.96), legend.direction="horizontal", legend.title=element_blank()) +
geom_vline(xintercept=c(1.5), linetype="dotted", size=1) +
ylim(2,8.2) +
scale_x_discrete(labels = c("0",2,4,6)) +
geom_vline(xintercept=c(1.5), linetype="dotted", size=1) +
labs(y=expression("Shell size"~(mm)), x=expression("Days"))
Exp2.Fig.size.FINAL <- Exp2.Fig.size.A  +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5, size=13,color="black"),
axis.text.y = element_text(angle = 0, hjust = 0.5, size=13,color="black"),
axis.line = element_line(color = 'black'),
axis.ticks.length=unit(0.2, "cm"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14)) +
scale_y_continuous(limits = c(2, 8), expand = c(0, 0))
Exp2.Fig.size.FINAL # view the plot
# ANALYSIS
# t-test for differences at the end of exp1 (day 10) and start of exp 2 (day 0) by treatment
exp1_d10.size <- subset(size_EXP1, Date=="20180724") # starting size on Day 10 in Exp 1
t.test(exp1_d10.size$shell_size~exp1_d10.size$Init.Trt) # p-value = 0.6083; t-test shows no difference between treatment at the start of Exp2
exp2_d0.size <- subset(size_EXP2, Date=="20180807") # starting size on Day 0 in Exp 2
t.test(exp2_d0.size$shell_size~exp2_d0.size$Init.Trt) # p-value = 0.2531; t-test shows significant difference between treatment at the start of Exp2
# Three-Way anova for shell size under Secondary OA Exposure
hist(size_EXP2.0$shell_size) # weak negative skew
shapiro.test(size_EXP2.0$shell_size) # not normally distributed
# run the model
EXP2.size.aov.mod <- aov(shell_size ~ Init.Trt*Sec.Trt* Day, data = size_EXP2.0) # run anova on treatment and time
anova(EXP2.size.aov.mod) # significant effect fromboth inital and secondary treatment
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.mod)) # not normally distributed
# Three-way anova (transformed data)
max(size_EXP2.0$shell_size) # max value = 7.764
library(MASS)
boxcox(size_EXP2.0$shell_size))
boxcox(size_EXP2.0$shell_size)
boxcox(size_EXP2.0$shell_size)
x <- size_EXP2.0$shell_size
boxcox(x)
?boxcox
library(rcompanion)
plotNormalHistogram(size_EXP2.0$shell_size)
T_cub <- sign(size_EXP2.0$shell_size) * abs(size_EXP2.0$shell_size)^(1/3)
shapiro.test(T_cub) # even more non normal
T_cub <- log(size_EXP2.0$shell_size)
shapiro.test(T_cub) # even more non normal
shapiro.test(T_cub) # even more non normal
# run the model
EXP2.size.aov.modTRANS <- aov(T_cub ~ Init.Trt*Sec.Trt* Day, data = size_EXP2.0) # run anova on treatment and time
anova(EXP2.size.aov.modTRANS) # significant effect fromboth inital and secondary treatment
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.modTRANS)) # not normally distributed
# Three-way anova (transformed data)
max(size_EXP2.0$shell_size) # max value = 7.764
EXP2.size.sqrt <- sqrt((7.764 + 1) - size_EXP2.0$shell_size) # reflect and square root transform
hist(EXP2.size.sqrt) # view histogram of transformation
shapiro.test(EXP2.size.sqrt) # even more non normal
# run the model
EXP2.size.aov.modTRANS <- aov(EXP2.size.sqrt ~ Init.Trt*Sec.Trt* Day, data = size_EXP2.0) # run anova on treatment and time
anova(EXP2.size.aov.modTRANS) # significant effect fromboth inital and secondary treatment
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.modTRANS)) # not normally distributed
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.modTRANS)) # not normally distributed
hist(EXP2.size.sqrt) # view histogram of transformation
EXP2.size.sqrt <- log((7.764 + 1) - size_EXP2.0$shell_size) # reflect and square root transform
hist(EXP2.size.sqrt) # view histogram of transformation
shapiro.test(EXP2.size.sqrt) # even more non normal
EXP2.size.sqrt <- sqrt((7.764 + 1) - size_EXP2.0$shell_size) # reflect and square root transform
hist(EXP2.size.sqrt) # view histogram of transformation
shapiro.test(EXP2.size.sqrt) # even more non normal
outlier.test(size_EXP2.0$shell_size)
?outlier.test
?outliers(size_EXP2.0$shell_size)
# Three-Way anova for shell size under Secondary OA Exposure
hist(size_EXP2.0$shell_size) # weak negative skew
shapiro.test(size_EXP2.0$shell_size) # not normally distributed
# run the model
EXP2.size.aov.mod <- aov(shell_size ~ Init.Trt*Sec.Trt* Day, data = size_EXP2.0) # run anova on treatment and time
anova(EXP2.size.aov.mod) # significant effect fromboth inital and secondary treatment
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.mod)) # not normally distributed
EXP2.size.sqrt <- sqrt((7.764 + 1) - size_EXP2.0$shell_size) # reflect and square root transform
hist(EXP2.size.sqrt) # view histogram of transformation
shapiro.test(EXP2.size.sqrt) # even more non normal
shapiro.test(size_EXP2.0$shell_size) # not normally distributed
# Levene's test for homogeneity
leveneTest(EXP2.size.aov.mod) # p 0.8418
# plot the residuals
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP2.size.aov.mod)) #plot histogram of residuals
boxplot(residuals(EXP2.size.aov.mod)) #plot boxplot of residuals
plot(fitted(EXP2.size.aov.mod),residuals(EXP2.size.aov.mod))
qqnorm(residuals(EXP2.size.aov.mod)) # qqplot
# plot and test model for heteroscedasticity
plot(lm(EXP2.size.aov.mod))
bptest(lm(EXP2.size.aov.mod))  # Breusch-Pagan test p-value = 0.27
bptest(lm(EXP2.size.aov.mod))  # Breusch-Pagan test p-value = 0.4175
# plot and test model for heteroscedasticity
plot(lm(EXP2.size.aov.mod))
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.mod)) # not normally distributed
# Levene's test for homogeneity
leveneTest(EXP2.size.aov.mod) # p 0.8418
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.mod)) # not normally distributed
OutVals <- boxplot(size_EXP2.0$shell_size)$out # identify outliers
which(x %in% OutVals) # identify outliers
size_EXP2.0$shell_size
min(size_EXP2.0$shell_size)
sizeTRANS <- size_EXP2.0$shell_size %>% filter(size_EXP2.0$shell_size > 2.909)
sizeTRANS <- size_EXP2.0 %>% filter(size_EXP2.0$shell_size > 2.909)
shapiro.test(sizeTRANS) # not normally distributed
sizeTRANS
shapiro.test(sizeTRANS$shell_size) # not normally distributed
shapiro.test(size_EXP2.0$shell_size) # not normally distributed
which(x %in% OutVals) # identify outliers
# Levene's test for homogeneity
leveneTest(EXP2.size.aov.mod) # p 0.8418
# Three-Way anova for shell size under Secondary OA Exposure
hist(size_EXP2.0$shell_size) # weak negative skew
shapiro.test(size_EXP2.0$shell_size) # not normally distributed
# run the model
EXP2.size.aov.mod <- aov(shell_size ~ Init.Trt*Sec.Trt* Day, data = size_EXP2.0) # run anova on treatment and time
anova(EXP2.size.aov.mod) # significant effect fromboth inital and secondary treatment
# shapiro test (model residuals)
shapiro.test(residuals(EXP2.size.aov.mod)) # not normally distributed
# Levene's test for homogeneity
leveneTest(EXP2.size.aov.mod) # p 0.8418
# plot the residuals
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP2.size.aov.mod)) #plot histogram of residuals
boxplot(residuals(EXP2.size.aov.mod)) #plot boxplot of residuals
plot(fitted(EXP2.size.aov.mod),residuals(EXP2.size.aov.mod))
qqnorm(residuals(EXP2.size.aov.mod)) # qqplot
# plot and test model for heteroscedasticity
plot(lm(EXP2.size.aov.mod))
bptest(lm(EXP2.size.aov.mod))  # Breusch-Pagan test p-value = 0.4175
bptest(lm(EXP2.size.aov.mod))  # Breusch-Pagan test p-value = 0.4175
# post-hoc
exp2.size.ph <- lsmeans(EXP2.size.aov.mod, pairwise ~  Init.Trt*Sec.Trt*Day)# pariwise Tukey Post-hoc test between repeated treatments
exp2.size.ph # view post hoc summary
E2.pairs.SIZE.05 <- cld(exp2.size.ph, alpha=.05, Letters=letters) #list pairwise tests and letter display p < 0.05
E2.pairs.SIZE.05 #view results
# effect of initial exposure
exp2.size.ph.initial <- lsmeans(EXP2.size.aov.mod, pairwise ~  Init.Trt*Sec.Trt* Day)# pariwise Tukey Post-hoc test between repeated treatments
exp2.size.ph.initial # view post hoc summary
EXP2_perc_diff_InitTrmt <- ((5.820324 - 5.586145) / (5.820324)) *100
EXP2_perc_diff_InitTrmt
# effect of secondary exposure
exp2.size.ph.sec <- lsmeans(EXP2.size.aov.mod, pairwise ~  Sec.Trt)# pariwise Tukey Post-hoc test between repeated treatments
exp2.size.ph.sec  # view post hoc summary
EXP2_perc_diff_SecTrmt <- ((5.796007 - 5.610461) / (5.796007)) *100
EXP2_perc_diff_SecTrmt

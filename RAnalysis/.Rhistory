plot(APEX_data$Date.Time,APEX_data$pH_T0) # tail end is after exposure experiment
plot(APEX_data$Date.Time,APEX_data$pH_T1) # tail end is after exposure experiment
plot(APEX_data$Date.Time,APEX_data$pH_T2) # start and tail end show before and after exposure experiment
plot(APEX_data$Date.Time,APEX_data$pH_T3) # tail end is after exposure experiment
plot(APEX_data$Date.Time,APEX_data$TMP_T0)
plot(APEX_data$Date.Time,APEX_data$TMP_T1)
plot(APEX_data$Date.Time,APEX_data$TMP_T2)
plot(APEX_data$Date.Time,APEX_data$Temp_T3)
# truncate start and end
start.elim <- 72 # create a start time at noon on day 0
APEX_data <- APEX_data[-(1:start.elim),]
APEX_data <- APEX_data[-(4442:4538),] # deleted last rows post-treatment
plot(APEX_data$Date.Time,APEX_data$pH_T0) # tail end pH increase is ommited
APEX_data$datehour <- cut(as.POSIXct(APEX_data$Date.Time),
format="%d-%m-%Y %H:%M:%S", breaks="hour") # create new column for datehour to aggregate data
head(APEX_data) # check this new column - all 10 minute increment data is called for the hour as "datehour"
date <- format(as.POSIXct(APEX_data$Date.Time) ,format = "%Y-%m-%d %H") # call year month and date
days <- as.Date(date) - as.Date(date[1]) # subtract from start to get number of days
days <- as.numeric(days) # convert to numeric
# pH tables and graphs for all exposures
pH.low_t0 <- do.call(data.frame,aggregate(pH_T0 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
pH.low_t3 <- do.call(data.frame,aggregate(pH_T3 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
pH.amb_t1 <- do.call(data.frame,aggregate(pH_T1 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
pH.amb_t2 <- do.call(data.frame,aggregate(pH_T2 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
pH.low_t0$Treatment <- "Low_1" #Add treatment Information
colnames(pH.low_t0) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
pH.low_t3$Treatment <- "Low_2" #Add treatment Information
colnames(pH.low_t3) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
pH.amb_t1$Treatment <- "Ambient_1" #Add treatment Information
colnames(pH.amb_t1) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
pH.amb_t2$Treatment <- "Ambient_2" #Add treatment Information
colnames(pH.amb_t2) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
hourly.pH <- rbind(pH.low_t0, pH.low_t3, pH.amb_t1, pH.amb_t2) #bind treatment data
hourly.pH <- hourly.pH[!is.na(hourly.pH$se), ] # ommit rows with NA for stand error
hourly.pH <- hourly.pH[!(hourly.pH$se > 0.2),] # ommit rows with high stand error (conical cleaning)
hourly.pH #view data
# subset the data
# Initial exposure pH
APEX.pH.Exp1 <- hourly.pH %>%
filter(days <= 9) # pH APEX Exp1
#check for the transition data from elevated to ambient for supplementary figure
LowEXP_1 <- APEX.pH.Exp1 %>%
filter(APEX.pH.Exp1$Treatment=="Low_1") # subset a lwo treatment conical
tail(LowEXP_1, n = 40) # rows 223:228 shows transition to ambiet common garden
LowEXP_2 <- APEX.pH.Exp1 %>%
filter(APEX.pH.Exp1$Treatment=="Low_2") # subset a lwo treatment conical
tail(LowEXP_2, n = 40) # rows 223:228 shows transition to ambiet common garden
APEX.pH.Exp1 <- APEX.pH.Exp1[-c(223:228, 451:456), ] # ommit these data for the supplementary figure
# common garden pH
APEX.pH.commongarden <- hourly.pH %>%
filter(days >= 10 & days <= 23) # pH APEX common garden
APEX.pH.commongarden <- APEX.pH.commongarden[-(1300:1338),] # delete the transition data after common garden
tail(APEX.pH.commongarden) # look at the end of the dataset - some data show transition to elevated
APEX.pH.commongarden <- APEX.pH.commongarden %>%
filter(mean > 7.7) # delete the last few datapoints, high st.dev becasue conditions were returning to elevated
# secondary exposure pH
APEX.pH.Exp2 <- hourly.pH %>%
filter(days >= 24 & days <= 30) # pH APEX Exp2
# Plot daily averages of pH data for the complete experiment (continuous APEX data)
APEX.pH.Exp1$datehour <- as.POSIXct(APEX.pH.Exp1$datehour, format="%Y-%m-%d %H:%M:%S") #format datehour
Exp1.pH.Apex.FIG <- ggplot(APEX.pH.Exp1, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment, color=Treatment),cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.pH.Exp1, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("A) Exp1") + #Label the graph with the main title
#scale_x_date(date_minor_breaks = "1 day") +
#scale_x_date(breaks = APEX.pH.Exp1$datehour[seq(1, length(APEX.pH.Exp1$datehour), by = 24)]) +
ylim(7,8) + #Set Y axis limits
xlab("Time") + #Label the X Axis
ylab("pH (NBS)") + #Label the Y Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
Exp1.pH.Apex.FIG <- Exp1.pH.Apex.FIG + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
Exp1.pH.Apex.FIG # view figure
APEX.pH.commongarden$datehour <- as.POSIXct(APEX.pH.commongarden$datehour, format="%Y-%m-%d %H:%M:%S") #format datehour
CommGarden.pH.Apex.FIG <- ggplot(APEX.pH.commongarden, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment), cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.pH.commongarden, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("B) Common garden") + #Label the graph with the main title
#scale_x_date(breaks = APEX.pH.Exp2$hour[seq(1, length(APEX.pH.Exp2$hour), by = 24)]) +
ylim(7,8) + #Set Y axis limits
xlab("Time") + #Label the X Axis
ylab("pH (NBS)") + #Label the Y Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
CommGarden.pH.Apex.FIG <- CommGarden.pH.Apex.FIG + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
CommGarden.pH.Apex.FIG # view the plot
APEX.pH.Exp2$datehour <- as.POSIXct(APEX.pH.Exp2$datehour, format="%Y-%m-%d %H:%M:%S")#format datehour
Exp2.pH.Apex.FIG <- ggplot(APEX.pH.Exp2, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment), cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.pH.Exp2, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("C) Exp2") + #Label the graph with the main title
#scale_x_date(breaks = APEX.pH.Exp2$hour[seq(1, length(APEX.pH.Exp2$hour), by = 24)]) +
ylim(7,8) + #Set Y axis limits
xlab("Time") + #Label the X Axis
ylab("pH (NBS)") + #Label the Y Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
Exp2.pH.Apex.FIG <- Exp2.pH.Apex.FIG + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
Exp2.pH.Apex.FIG #view graph
## Temp tables and graphs
Temp.low_t0 <- do.call(data.frame,aggregate(TMP_T0 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
Temp.low_t3 <- do.call(data.frame,aggregate(Temp_T3 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
Temp.amb_t1 <- do.call(data.frame,aggregate(TMP_T1 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
Temp.amb_t2 <- do.call(data.frame,aggregate(TMP_T2 ~ datehour + days, data = APEX_data, function(x) c(mean = mean(x), se = std.error(x)))) #calculate mean and sem of each treatment by Hour
Temp.low_t0$Treatment <- "Low_1" #Add treatment Information
colnames(Temp.low_t0) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
Temp.low_t3$Treatment <- "Low_2" #Add treatment Information
colnames(Temp.low_t3) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
Temp.amb_t1$Treatment <- "Ambient_1" #Add treatment Information
colnames(Temp.amb_t1) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
Temp.amb_t2$Treatment <- "Ambient_2" #Add treatment Information
colnames(Temp.amb_t2) <- c("datehour", "days", "mean", "se", "Treatment") #rename columns to generic format
hourly.Temp <- rbind(Temp.low_t0, Temp.low_t3, Temp.amb_t1, Temp.amb_t2) #bind treatment data
hourly.Temp <- hourly.Temp[!is.na(hourly.Temp$se), ] # ommit rows with NA for stand error
hourly.Temp <- hourly.Temp[!(hourly.Temp$se > 0.2),] # ommit rows with high stand error (conical cleaning)
hourly.Temp #view data
# subset the data
APEX.Temp.Exp1 <- hourly.Temp %>%
filter(days <= 9) # Temp APEX Exp1
APEX.Temp.commongarden <- hourly.Temp %>%
filter(days >= 10 & days <= 23) # Temp APEX common garden
APEX.Temp.Exp2 <- hourly.Temp %>%
filter(days >= 24 & days <= 30) # Temp APEX Exp2
# Plot daily averages of Temp data for the complete experiment (continuous APEX data)
APEX.Temp.Exp1$datehour <- as.POSIXct(APEX.Temp.Exp1$datehour, format="%Y-%m-%d %H:%M:%S") #format datehour
Exp1.Temp.Apex.FIG <- ggplot(APEX.Temp.Exp1, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment), cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.Temp.Exp1, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("D) Exp1") + #Label the graTemp with the main title
#scale_x_date(date_minor_breaks = "1 day") +
#scale_x_date(breaks = APEX.Temp.Exp1$datehour[seq(1, length(APEX.Temp.Exp1$datehour), by = 24)]) +
ylim(14,21) + #Set Y axis limits
xlab("Time") + #Label the X Axis
ylab("Temp (°C)") + #Label the Y Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
Exp1.Temp.Apex.FIG   <- Exp1.Temp.Apex.FIG   + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
Exp1.Temp.Apex.FIG   #view graph
APEX.Temp.commongarden$datehour <- as.POSIXct(APEX.Temp.commongarden$datehour, format="%Y-%m-%d %H:%M:%S")#format datehour
CommGarden.Temp.Apex.FIG <- ggplot(APEX.Temp.commongarden, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment), cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.Temp.commongarden, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("E) Common garden") + #Label the graTemp with the main title
#scale_x_date(breaks = APEX.Temp.Exp2$hour[seq(1, length(APEX.Temp.Exp2$hour), by = 24)]) +
ylim(14,21) + #Set Y axis limits
ylab("Temp (°C)") + #Label the Y Axis
xlab("Time") + #Label the X Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
CommGarden.Temp.Apex.FIG   <- CommGarden.Temp.Apex.FIG   + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
CommGarden.Temp.Apex.FIG   #view graph
APEX.Temp.Exp2$datehour <- as.POSIXct(APEX.Temp.Exp2$datehour, format="%Y-%m-%d %H:%M:%S")#format datehour
Exp2.Temp.Apex.FIG <- ggplot(APEX.Temp.Exp2, aes(x=datehour, y=mean, group=Treatment, color=Treatment)) +#Plot average diurnal cycle of temperature data
#geom_line() +
geom_point(aes(x = datehour, y = mean, group=Treatment), cex=1) + #Plot points using time as the x axis, light as the Y axis and black dots
geom_errorbar(aes(x=datehour, ymax=mean+se, ymin=mean-se),
position=position_dodge(0.9), data=APEX.Temp.Exp2, col="black", width=0) + #set values for standard error bars and offset on the X axis for clarity
ggtitle("F) Exp2") + #Label the graTemp with the main title
#scale_x_date(breaks = APEX.Temp.Exp2$hour[seq(1, length(APEX.Temp.Exp2$hour), by = 24)]) +
ylim(14,21) + #Set Y axis limits
ylab("Temp (°C)") + #Label the Y Axis
xlab("Time") + #Label the X Axis
#scale_x_date(date_minor_breaks = "1 day") +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.ticks.length=unit(-0.2, "cm"), #turn ticks inward
axis.text.y = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm")), #set margins on labels
axis.text.x = element_text(margin=unit(c(0.5,0.5,0.5,0.5), "cm"), angle = 90, vjust = 0.5, hjust=1), #set margins on labels
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background=element_blank(), #Set the plot background
panel.border=element_rect(size=1.25, fill = NA), #set outer border
plot.title=element_text(hjust=0),
legend.position="bottom", #set legend location
legend.text = element_text(size = 8), #set the legend text size
legend.key = element_blank(), #remove the legend background
legend.title = element_text(size=8, face="bold")) #Justify the title to the top left
Exp2.Temp.Apex.FIG   <- Exp2.Temp.Apex.FIG   + scale_color_manual(values=c("#009E73", "#0072B2", "#E69F00", "#D55E00")) #colorblindess color theme
Exp2.Temp.Apex.FIG   #view graph
Supplem.Fig.conical.pH.temp <- grid.arrange(arrangeGrob(Exp1.pH.Apex.FIG, CommGarden.pH.Apex.FIG, Exp2.pH.Apex.FIG, left="pH", ncol=3),
arrangeGrob(Exp1.Temp.Apex.FIG, CommGarden.Temp.Apex.FIG, Exp2.Temp.Apex.FIG,
left="Temperature", ncol=3), ncol=1)
###  HEATH TRAY Flow rate data ##################################################################
# NOTE: heath tray pairs were gravity-fed SW from conical overflow (1 conical to every heath tray pair)
# conicals were set to 1 LPM to target ~500 mLPM for each tray
flow<-read.csv("Data/Chemistry.flow/Flow.rates.csv", header=T, sep=",", na.string="NA", as.is=T) #upload file
flow # view the data
# flow <- flow %>% dplyr::filter(Notes %in% "good")
flow$Day_ID <- paste(flow$Day, flow$Sample.ID, sep ="_")
flow_summary <-flow %>%
dplyr::summarise(mean_LPM= mean(LPM),
max_LPM = max(LPM),
min_LPM = min(LPM),
sd_LPM = sd(LPM),
SEM = ((sd(LPM))/sqrt(n())),
count = n()) %>% # get the count by leaving n open
dplyr::arrange(desc(min_LPM)) # makes table in descending order
flow_summary # view table
# exposure 1 flow rate
EXP1 <- subset(flow, Exp.num=="EXP1") #initial 10-day trial, subset entire dataset resp by column nsame "Exp.num" == Exp1
flow_EXP1 <- subset(EXP1, Day!=0) # ommit day 0
# ambient common garden
AMB <- subset(flow, Exp.num=="AMB") #ambeint common garden
# exposure 2 flow rate
EXP2 <- subset(flow, Exp.num=="EXP2") #second 6-day trial, subset entire dataset resp by column nsame "Exp.num" == Exp2
flow_EXP2 <- subset(EXP2, Day!=0) # ommit day 0
flow_EXP1_2 <- rbind(flow_EXP1, flow_EXP2) # bind exp1 and 2, day 0 already ommited
# EXP1
# flow exp by treatment ---------------- #
flow_EXP1 # all "good and "adjusted" data - occasionally recorded multiple times a day to adjust flow
flow_EXP1.treat <- summarySE(flow_EXP1, measurevar="LPM", groupvars=c("Day_ID", "Treatment_1_2", "Sample.ID")) # summarize by day treament and ID
flow_EXP1.treat # view table - gives mean values if recorded muliple times in that day or simply shows the single value recorded
flow_EXP1.treat.2 <- summarySE(flow_EXP1.treat, measurevar="LPM", groupvars=c("Treatment_1_2"))
flow_EXP1.treat.2 # stats by treatment
# Ambient common garden ---------------- #
# flow exp by treatment
flow_EXP1.amb <- summarySE(AMB, measurevar="LPM", groupvars=c("Treatment")) # summary by treatment
flow_EXP1.amb # view table
# EXP2 summary  ---------------- #
# flow by treatment
flow_EXP2.treat <- summarySE(flow_EXP2, measurevar="LPM", groupvars=c("Sec.treat")) # summary by treatment (did not measure multiple times a day)
flow_EXP2.treat # view summary table
# EXP1 AND EXP2 summary
# flow by treatment
flow_EXP_1_2.treat <- summarySE(flow_EXP1_2, measurevar="LPM", groupvars=c("Treatment")) # summary by treatment
flow_EXP_1_2.treat # view summary table
### HEATH TRAY Discrete Seawater Chemistry Tables #######################################################################
#pH Tris Calibration Curves
#Data to calculate conversion equations from mV to total scale using tris standard for pH probe
path.tris <-("Data/Chemistry.flow/pH_Calibration_Files") #set path to calibration file folder
file.names.tris<-list.files(path = path.tris, pattern = "csv$") #list all the file names with csv
pH.cals <- data.frame(matrix(NA, nrow=length(file.names.tris), ncol=4, dimnames=list(file.names.tris,c("Date", "Intercept", "Slope","R2")))) #generate an empty 3 column dataframe with specific column names
for(i in 1:length(file.names.tris)) { # for every file in list start at the first and run this following function
Calib.Data <-read.table(file.path(path.tris,file.names.tris[i]), header=TRUE, sep=",", na.string="NA", as.is=TRUE) #reads in the data files
model <-lm(mVTris ~ TTris, data=Calib.Data) #runs a linear regression of mV as a function of temperature
coe <- coef(model) #extracts the coeffecients
R <- summary(model)$r.squared #extracts the R2
pH.cals[i,2:3] <- coe #inserts coef in the dataframe
pH.cals[i,4] <- R #inserts R2 in the dataframe
pH.cals[i,1] <- substr(file.names.tris[i],1,8) #stores the file name in the Date column
}
colnames(pH.cals) <- c("Calib.Date",  "Intercept",  "Slope", "R2") #names the columns of the dataframe
pH.cals #view data - R2 shows linear strength >0.98 for pH calibration
#call cumulative spreadsheet of discrete seawater chemistry
chem<-read.csv("Output/Seawater_chemistry_table_Output_All.csv", header=T, sep=",", na.string="NA", as.is=T)
chem # view the file
chem.exp <-subset(chem, Treatment!="na") #remove na - na often set as the treatment for samples of the sump
chem.exp1 <-chem.exp[52:131,] # exposure 1 without Day 0 (20180715 - 20180724)
chem.exp1$Exposure <- "Exp1"
chem.exp1$tank.name <- substr(chem.exp1$Tank, start = 10, stop = 13) # new column for tank name without date
chem.exp2 <- chem.exp[157:204,] # exposure 2 without Day 0 (20180808 - 20180813)
chem.exp2$Exposure <- "Exp2"
chem.exp2$tank.name <- substr(chem.exp2$Tank, start = 10, stop = 13) # new column for tank name without date
# test for tray differences --------------------------------------------------------------------------------- #
#Exp 1 ---------------------------------------- # seawater treatment (4 trays each)
chem.exp1.LOW <- chem.exp1 %>% filter(Treatment=="Low")
chem.exp1.LOW
chem.exp1.AMBIENT <- chem.exp1 %>% filter(Treatment=="Ambient")
## TWO-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
#Exp 2 ---------------------------------------- # seawater treatment (4 trays each) NOT combined treatment effect
chem.exp2.LOW <- chem.exp2 %>% filter(Treatment=="Low")
chem.exp2.AMBIENT <- chem.exp2 %>% filter(Treatment=="Ambient")
## TWO-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
chem.exp1.LOW
# one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp2.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp2.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp2.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp2.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# t.tests for to verify if treatments are the same under secondary expsure...
# NOTE: we already found no tray diffs in seawater treatment (n=4 trays treatment-1); this looks at trays specific to the initial×secoandry treatment
# AMBIENT × AMBIENT
t.test(pH~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in pH between TWO trays - AMBIENT × AMBIENT treatment
#Exp 2 ---------------------------------------- # experimental treatment (initial and seccondary exposure
# Tray ID Key:
# ambient × ambient = "H2_B", "H1_B"
# ambient × low = "H2_T", "H1_T"
# low × low = "H3_B", "H0_B"
# low × ambient = "H3_T", "H0_T"
chem.exp2.LOW.LOW <-  chem.exp2.LOW %>% dplyr::filter(tank.name %in% c("H3_B", "H0_B")) # low × low treat
chem.exp2.AMBIENT.LOW <- chem.exp2.LOW %>% dplyr::filter(tank.name %in% c("H2_T", "H1_T")) # ambient × low treat
chem.exp2.AMBIENT.AMBIENT <- chem.exp2.AMBIENT %>% dplyr::filter(tank.name %in% c("H2_B", "H1_B")) # ambient × ambient
chem.exp2.LOW.AMBIENT <- chem.exp2.AMBIENT %>% dplyr::filter(tank.name %in% c("H3_T", "H0_T")) # low × ambient
# t.tests for to verify if treatments are the same under secondary expsure...
# NOTE: we already found no tray diffs in seawater treatment (n=4 trays treatment-1); this looks at trays specific to the initial×secoandry treatment
# AMBIENT × AMBIENT
t.test(pH~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in pH between TWO trays - AMBIENT × AMBIENT treatment
t.test(TA~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in TA between TWO trays - AMBIENT × AMBIENT treatment
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
#Exp 2 ---------------------------------------- # seawater treatment (4 trays each) NOT combined treatment effect
chem.exp2.LOW <- chem.exp2 %>% filter(Treatment=="Low")
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# t.tests for to verify if treatments are the same under secondary expsure...
# NOTE: we already found no tray diffs in seawater treatment (n=4 trays treatment-1); this looks at trays specific to the initial×secoandry treatment
# AMBIENT × AMBIENT
t.test(pH~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in pH between TWO trays - AMBIENT × AMBIENT treatment
# t.tests for to verify if treatments are the same under secondary expsure...
# NOTE: we already found no tray diffs in seawater treatment (n=4 trays treatment-1); this looks at trays specific to the initial×secoandry treatment
# AMBIENT × AMBIENT
t.test(pH~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in pH between TWO trays - AMBIENT × AMBIENT treatment
t.test(TA~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in TA between TWO trays - AMBIENT × AMBIENT treatment
t.test(pCO2~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in pCO2 between TWO trays - AMBIENT × AMBIENT treatment
t.test(Salinity~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in Salinity between TWO trays - AMBIENT × AMBIENT treatment
t.test(Temperature~tank.name, data=chem.exp2.AMBIENT.AMBIENT) # no diff in Temperature between TWO trays - AMBIENT × AMBIENT treatment
# AMBIENT × Low
t.test(pH~tank.name, data=chem.exp2.AMBIENT.LOW) # no diff in pH between TWO trays - AMBIENT × Low treatment
t.test(TA~tank.name, data=chem.exp2.AMBIENT.LOW) # no diff in TA between TWO trays - AMBIENT × Low treatment
t.test(pCO2~tank.name, data=chem.exp2.AMBIENT.LOW) # no diff in pCO2 between TWO trays - AMBIENT × Low treatment
t.test(Salinity~tank.name, data=chem.exp2.AMBIENT.LOW) # no diff in Salinity between TWO trays - AMBIENT × Low treatment
t.test(Temperature~tank.name, data=chem.exp2.AMBIENT.LOW) # no diff in Temperature between TWO trays - AMBIENT × Low treatment
# Low × AMBIENT
t.test(pH~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in pH between TWO trays - Low × AMBIENT treatment
t.test(TA~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in TA between TWO trays - Low × AMBIENT treatment
t.test(pCO2~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in pCO2 between TWO trays - Low × AMBIENT treatment
t.test(Salinity~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in Salinity between TWO trays - Low × AMBIENT treatment
t.test(Temperature~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in Temperature between TWO trays - Low × AMBIENT treatment
# Low × LOW
t.test(pH~tank.name, data=chem.exp2.LOW.LOW) # no diff in pH between TWO trays - Low × LOW treatment
t.test(TA~tank.name, data=chem.exp2.LOW.LOW) # no diff in TA between TWO trays - Low × LOW treatment
t.test(pCO2~tank.name, data=chem.exp2.LOW.LOW) # no diff in pCO2 between TWO trays - Low × LOW treatment
t.test(Salinity~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in Salinity between TWO trays - Low × AMBIENT treatment
t.test(Temperature~tank.name, data=chem.exp2.LOW.AMBIENT) # no diff in Temperature between TWO trays - Low × AMBIENT treatment
# bind both exposures for cumulative table
chem.exp_1_2 <- rbind(chem.exp1,chem.exp2) # bind exposure 1 and 2
chem.exp_1_2_pH_table <- aggregate(chem.exp_1_2$pH, list(chem.exp_1_2$Treatment), mean)
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
a
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(Temperature~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
chem.exp1.LOW
summary(aov(TA~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
## one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp1.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp1.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(Temperature~tank.name, data=chem.exp1.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(TA~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(pH~tank.name, data=chem.exp1.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp1.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp1.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp2.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(Temperature~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(pH~tank.name, data=chem.exp2.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp2.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(Temperature~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(pH~tank.name, data=chem.exp2.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(TA~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(pCO2~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
summary(aov(pH~tank.name, data=chem.exp2.AMBIENT)) # no diff in pH between FOUR trays - AMBIENT treatment
summary(aov(Salinity~tank.name, data=chem.exp2.AMBIENT)) # no diff in TA between FOUR trays - AMBIENT treatment
summary(aov(Temperature~tank.name, data=chem.exp2.AMBIENT)) # no diff in pCO2 between FOUR trays - AMBIENT treatment
# one-way anovas to explore tray effects (4 trays in exposure 1)
summary(aov(pH~tank.name, data=chem.exp2.LOW)) # no diff in pH between FOUR trays - LOW treatment
summary(aov(TA~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(pCO2~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment
summary(aov(Salinity~tank.name, data=chem.exp2.LOW)) # no diff in TA between FOUR trays - LOW treatment
summary(aov(Temperature~tank.name, data=chem.exp2.LOW)) # no diff in pCO2 between FOUR trays - LOW treatment

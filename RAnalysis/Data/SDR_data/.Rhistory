# WHY is this IMPORTANT?: Although the LoLin package was used to remove bias, the "reference" dataset, in which each run was completed
# individually and parameters of the model were altered as needed, contains a tedious criterion that does not make this exact data
# easy to obtain for a reader. This  script assess the correlative strength of the complete automated analysis (of nine parameter combinations)
# to the reference in order to choose the set of model paremeters (LoLin outputs) that best represent the data.
# PROCEDURE:
# 1) Determine the dataset (i.e. alpha = 0.4, no truncation) with parmeters that best represents the "reference" via loess curve and linear regression
# choose dataset with least values outside of the loess curve (data from each exposure period analyzed seperately; initial and secondary)
# 2) Isolate these values by subsetting rows from the orignal table
# 3) Repeat step 1 for this subset and choose parameters with greatest linear strength to the reference
# 4) Merge the two datasets as "Finalresp" and check linear strength to the initial "reference" for that exposure period
rm(list=ls())
##Install and load packages
library(dplyr)
library(plyr)
library(ggplot2)
library(ggpubr)
library(Rmisc)
library(nlme)
library(lme4)
library(ggplot2)
library(lme4)
library(ggpubr)
library(nlme)
library(plotrix)
library(lsmeans)
library(gridExtra)
#set working directory--------------------------------------------------------------------------------------------------
setwd("C:/Users/samjg/Documents/My_Projects/Juvenile_geoduck_OA/RAnalysis/") #set working
#Load Size Data
resp<-read.csv("Data/Metabolic.Rates/Resp.30d.Exposure.csv", header=T, sep=",", na.string="NA", as.is=T)
names(resp)
# subset for exposure periods
resp_EXP1 <- subset(resp, EXP.numb=="EXP1") # subset initial 10-d (all resp values on days 2,4,6,8,10)
resp_EXP2 <- subset(resp, EXP.numb=="EXP2") # subset secondary 6-d (contains resp values days 0,2,4,6; NOTE day 0 was BEFORE exposure to treatment)
resp_EXP2.0 <-subset(resp_EXP2, Day!=0) # filter out Day 0 of secondary exposure
#------------- Secondary exposure "reference" vs. automated outputs
# RESULT:
# first linear fit determined  alpha 0.4 and no truncation had the least data outside loess curve
# second subset determined 0.6 and 10-20min truncation had the strongest fit
# merged a final respiration rate dataset with r^2 0.887 with the initial "reference"
# view data to verify column number
head(resp_EXP2)
par(mfrow=c(1,1)) # set margins for plots
# plot all parameters against the reference
plot(resp_EXP2[,1],resp_EXP2[,2], main= "Ref vs. alpha0.2_all")       # Adjusted R-squared:  0.4458
summary(lm(resp_EXP2[,1]~resp_EXP2[,2]))
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,2])) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
plot(resp_EXP2[,1],resp_EXP2[,3], main= "Ref vs. alpha0.2_min10.20")  # Adjusted R-squared:  0.4568
summary(lm(resp_EXP2[,1]~resp_EXP2[,3]))
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,3])) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
plot(resp_EXP2[,1],resp_EXP2[,4], main= "Ref vs. alpha0.2_min10.25")  # Adjusted R-squared:  0.4989
summary(lm(resp_EXP2[,1]~resp_EXP2[,4]))
plot(resp_EXP2[,1],resp_EXP2[,5], main= "Ref vs. alpha0.4_all")       # Adjusted R-squared:  0.7953, strongest regression and leqst number of values outside the loess interval
summary(lm(resp_EXP2[,1]~resp_EXP2[,5]))
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,5])) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = .01))
# numbers outside of loess curve are 97,98,105,114,120,132,141,142,143,146,147,150,152,153,155,156,173,176,180,188
numberID <- (c(97,98,105,114,120,132,141,142,143,146,147,150,152,153,155,156,173,176,180,188 )) - 96 # tp obtain the actual order (EXP1 was 96 rows)
numberID # actuall number of ID 1  2  9 18 24 36 45 46 47 50 51 54 56 57 59 60 77 80 84 92
#check values
resp_EXP2[c(1,2,9,18,24,36,45,46,47,50,51,54,56,57,59,60,77,80,84,92), 20] # check what row numbers are outside loess curve
# CONCLUSION - alpha 0.4 and no truncation has the least values outside of the loess fit
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,5])) + geom_point() + geom_smooth(method = 'loess') + geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = .01))
# look at the loess graph again...
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,5])) + geom_point() + geom_smooth(method = 'loess') + geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = .01))
# numbers outside of loess curve are 97,98,105,114,120,132,141,142,143,146,147,150,152,153,155,156,173,176,180,188
numberID <- (c(97,98,105,114,120,132,141,142,143,146,147,150,152,153,155,156,173,176,180,188 )) - 96 # to obtain the actual order (EXP1 was 96 rows)
numberID # actuall number of ID 1  2  9 18 24 36 45 46 47 50 51 54 56 57 59 60 77 80 84 92
#check values
resp_EXP2[c(1,2,9,18,24,36,45,46,47,50,51,54,56,57,59,60,77,80,84,92), 20] # check what row numbers are outside loess curve
# make a new data frame of just the REF ouput and alpha =0.2 all
newdata_resp_EXP2_ALL <- data.frame(resp_EXP2$Date , resp_EXP2[,c(1:10)])
# subset resp_EXP1 for a new data file
newdata_resp_EXP2_ALL <- data.frame(resp_EXP2$Date , resp_EXP2[,c(1:10)])
newdata_resp_EXP2_ALL
newdata_resp_EXP2_ALL_1 <-newdata_resp_EXP2_ALL[c(1,2,9,18,24,36,45,46,47,50,51,54,56,57,59,60,77,80,84,92), ]
# plot the new subsetted dataset for each set of parameters
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,3])
summary(lm(newdata_resp_EXP2_ALL_1[,3]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4139
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,4])
summary(lm(newdata_resp_EXP2_ALL_1[,4]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared:  0.5674
summary(lm(newdata_resp_EXP2_ALL_1[,5]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.425
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,6])
summary(lm(newdata_resp_EXP2_ALL_1[,6]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.02776
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,7])
summary(lm(newdata_resp_EXP2_ALL_1[,7]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5682
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4892
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
summary(lm(newdata_resp_EXP2_ALL_1[,9]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4071
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,10])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
summary(lm(newdata_resp_EXP2_ALL_1[,9]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4071
summary(lm(newdata_resp_EXP2_ALL_1[,10]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5931
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,11])
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,10])
summary(lm(newdata_resp_EXP2_ALL_1[,10]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5931
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,11])
summary(lm(newdata_resp_EXP2_ALL_1[,11]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.71699  !!!! use this!
summary(lm(newdata_resp_EXP2_ALL_1[,11]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5259  !!!! use this!
# plot the new subsetted dataset for each set of parameters
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,3])
summary(lm(newdata_resp_EXP2_ALL_1[,3]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4401
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,4])
summary(lm(newdata_resp_EXP2_ALL_1[,4]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared:  0.4723
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,5])
summary(lm(newdata_resp_EXP2_ALL_1[,5]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5491
summary(lm(newdata_resp_EXP2_ALL_1[,10]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5508
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,11])
summary(lm(newdata_resp_EXP2_ALL_1[,11]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5259  !!!! use this!
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,10])
summary(lm(newdata_resp_EXP2_ALL_1[,10]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5508
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,11])
summary(lm(newdata_resp_EXP2_ALL_1[,11]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5259  !!!! use this!
summary(lm(newdata_resp_EXP2_ALL_1[,3]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4401
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,4])
summary(lm(newdata_resp_EXP2_ALL_1[,4]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared:  0.4723
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,5])
summary(lm(newdata_resp_EXP2_ALL_1[,5]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5491
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,6])
summary(lm(newdata_resp_EXP2_ALL_1[,6]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.2287
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,7])
summary(lm(newdata_resp_EXP2_ALL_1[,7]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4887
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
# look at the loess graph again...
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2[,5])) + geom_point() + geom_smooth(method = 'loess') + geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = .01))
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
summary(lm(newdata_resp_EXP2_ALL_1[,9]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5151
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,10])
summary(lm(newdata_resp_EXP2_ALL_1[,10]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5508
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,11])
summary(lm(newdata_resp_EXP2_ALL_1[,11]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5259
#assgin new  "FINAL" column base as the alpha 0.4 all
# resp_EXP2[,5] =0.4 all
resp_EXP2$FINALresp <- resp_EXP2[,5]
summary(lm(newdata_resp_EXP2_ALL_1[,3]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4401
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,4])
summary(lm(newdata_resp_EXP2_ALL_1[,4]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared:  0.4723
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,5])
summary(lm(newdata_resp_EXP2_ALL_1[,5]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.5491
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,6])
summary(lm(newdata_resp_EXP2_ALL_1[,6]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.2287
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,7])
summary(lm(newdata_resp_EXP2_ALL_1[,7]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.4887
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
#assgin new  "FINAL" column base as the alpha 0.4 all
# resp_EXP2[,5] =0.4 all
resp_EXP2$FINALresp <- resp_EXP2[,5]
# FINAresp is resp_EXP2[,18]
# insert the ID to replace with 0.6 10-25mins
# resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92),21] <- resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92), 10]
resp_EXP2[,8]
# FINAresp is resp_EXP2[,18]
# insert the ID to replace with 0.6 10-25mins
# resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92),21] <- resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92), 10]
header(resp_EXP2[,8])
# FINAresp is resp_EXP2[,18]
# insert the ID to replace with 0.6 10-25mins
# resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92),21] <- resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92), 10]
name(resp_EXP2[,8])
# FINAresp is resp_EXP2[,18]
# insert the ID to replace with 0.6 10-25mins
# resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92),21] <- resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92), 10]
head(resp_EXP2)
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,8])
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221
newdata_resp_EXP2_ALL_1
resp_EXP2
# FINAresp is resp_EXP2[,18]
# insert the ID to replace with 0.6 10-25mins
# resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92),21] <- resp_EXP2[c(18, 57, 59, 60 ,54 ,45 , 9 ,34 ,56,  2, 92), 10]
head(resp_EXP2)
#assgin new  "FINAL" column base as the alpha 0.4 with no truncation as a base
head(resp_EXP2) # alpha 0.4 with no truncation = resp_EXP2[,5]
# Note: FINALresp is column # 18 in resp_EXP2; as resp_EXP2[,18]
# insert the ID to replace with alpha 0.4 10-25mins
head(resp_EXP2) # alpha 0.4 10-25mins = resp_EXP2[,5]
resp_EXP2[c(1,2,9,18,24,36,45,46,47,50,51,54,56,57,59,60,77,80,84,92),21] <- resp_EXP2[c(1,2,9,18,24,36,45,46,47,50,51,54,56,57,59,60,77,80,84,92), 7]
# normality test
shapiro.test(resp_EXP2$FINALresp) # not normal - ommit the data from row 186
# normality test
shapiro.test(resp_EXP2$FINALresp) # not normal
hist(resp_EXP2$FINALresp) # positive or right skewed - need to transform the data
# check the strength of Finalresp to the reference
plot(resp_EXP2[,1],resp_EXP2$FINALresp, main= "Ref vs. FINALresp")
summary(lm(resp_EXP2[,1]~resp_EXP2$FINALresp)) # Multiple R-squared:  0.8783,	Adjusted R-squared:  0.8771
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2$FINALresp)) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
# normality test - data tranformation
shapiro.test(resp_EXP2$FINALresp) # not normal
hist(resp_EXP2$FINALresp) # positive or right skewed - need to transform the data
# transform via squareroot gets a normal distrubtion via shapro wilk test
resp_EXP1$sqrt_FINALresp <- sqrt(resp_EXP2$FINALresp)
shapiro.test(resp_EXP2$sqrt_FINALres) #  not normal
# transform via squareroot gets a normal distrubtion via shapro wilk test
resp_EXP2$sqrt_FINALresp <- sqrt(resp_EXP2$FINALresp)
shapiro.test(resp_EXP2$sqrt_FINALres) #  not normal
hist(resp_EXP2$sqrt_FINALres)
OutVals2 = boxplot(resp_EXP2$FINALresp)$out
which(resp_EXP2$FINALresp %in% OutVals2) #  83 and 90 are outliers for new resp file
OutVals2.0 = boxplot(resp_EXP2$Resp_individually_all.csv)$out
which(resp_EXP2$Resp_individually_all.csv %in% OutVals2.0) # 83 and 90 are outliers in "REF"
OutVals2.1 = boxplot(resp_EXP2$LpcResp_alpha0.4_all.csv)$out
which(resp_EXP2$LpcResp_alpha0.4_all.csv %in% OutVals2.1) # 90 is an outlier in alpha 0.4 all
resp_EXP2_om <- resp_EXP2[-c(83,90),]
shapiro.test(resp_EXP2_om$FINALresp) # normally distributed
hist(resp_EXP2_om$FINALresp) # noted that 83 and 90 ommitted gives a norm distribution
# normality test - data tranformation
shapiro.test(resp_EXP2$FINALresp) # not normal
hist(resp_EXP2$FINALresp) # positive or right skewed - need to transform the data
# check the strength of Finalresp to the reference
plot(resp_EXP2[,1],resp_EXP2$FINALresp, main= "Ref vs. FINALresp")
summary(lm(resp_EXP2[,1]~resp_EXP2$FINALresp)) # Multiple R-squared:  0.8889,	Adjusted R-squared:  0.8878
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2$FINALresp)) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
# normality test - data tranformation
shapiro.test(resp_EXP2$FINALresp) # not normal
hist(resp_EXP2$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2$sqrt_FINALresp <- sqrt(resp_EXP2$FINALresp)
shapiro.test(resp_EXP2$sqrt_FINALres) #  transformation is now normal
hist(resp_EXP2$sqrt_FINALres) # view histogram of sqrt transformation
# Two-way ANOVA (not transformed)
resp_EXP2$Day <- as.factor(resp_EXP2$Day) # treat day as a character
EXP2.ANOVA<- aov(FINALresp ~ Init.treat * Day, data = resp_EXP2) #use untransformed data for model - test residuals for normality
anova(EXP2.ANOVA) # significant effect of initial treatment
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_2.4.6. <- subset(resp_EXP2, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
resp_EXP2_d0 <- subset(resp_EXP2, Day==0) # subset of just day 0 data (for the plot)
resp_EXP2_2.4.6.
# normality test - data tranformation
shapiro.test(resp_EXP2_2.4.6.$FINALresp) # not normal
# normality test - data tranformation
shapiro.test(resp_EXP2_d2.4.6$FINALresp) # not normal
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_d2.4.6 <- subset(resp_EXP2, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
# normality test - data tranformation
shapiro.test(resp_EXP2_d2.4.6$FINALresp) # not normal
hist(resp_EXP2_d2.4.6$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2_d2.4.6$sqrt_FINALresp <- sqrt(resp_EXP2_d2.4.6$FINALresp)
shapiro.test(resp_EXP2_d2.4.6$sqrt_FINALres) #  transformation is now normal
hist(resp_EXP2_d2.4.6$sqrt_FINALres) # view histogram of sqrt transformation
# normality test - data tranformation
shapiro.test(resp_EXP2_2.4.6$FINALresp) # not normal
hist(resp_EXP2_2.4.6$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2_2.4.6$sqrt_FINALresp <- sqrt(resp_EXP2_2.4.6$FINALresp)
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_2.4.6 <- subset(resp_EXP2, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
# normality test - data tranformation
shapiro.test(resp_EXP2_2.4.6$FINALresp) # not normal
hist(resp_EXP2_2.4.6$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2_2.4.6$sqrt_FINALresp <- sqrt(resp_EXP2_2.4.6$FINALresp)
shapiro.test(resp_EXP2_2.4.6$sqrt_FINALres) #  transformation is now normal
hist(resp_EXP2_2.4.6$sqrt_FINALres) # view histogram of sqrt transformation
# Three-way ANOVA (not transformed)
resp_EXP2_2.4.6$Day <- as.factor(resp_EXP2_2.4.6$Day) # treat day as a character
EXP2.ANOVA<- aov(FINALresp ~ Init.treat * Day, data = resp_EXP2_2.4.6) #use untransformed data for model - test residuals for normality
anova(EXP2.ANOVA) # significant effect of initial treatment
# Three-way ANOVA (not transformed)
resp_EXP2_2.4.6$Day <- as.factor(resp_EXP2_2.4.6$Day) # treat day as a character
EXP2.ANOVA <- aov(FINALresp ~ Init.treat*Sec.treat*Day, data = resp_EXP2_2.4.6.) # run anova on treatment and time
anova(EXP2.ANOVA) # significant effect of time and marginal effect from secondary treatment
# diagnostic tests and plots of model residuals (not transformed)
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP1.ANOVA)) #plot histogram of residuals
shapiro.test(residuals(EXP1.ANOVA)) # Shapiro test - residuals are normal
hist(residuals(EXP2.ANOVA)) #plot histogram of residuals
shapiro.test(residuals(EXP2.ANOVA)) # Shapiro test - residuals are normal
shapiro.test(residuals(EXP2.ANOVA)) # Shapiro test - residuals are not normal
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
boxplot(residuals(EXP2.ANOVA)) #plot boxplot of residuals
plot(fitted(EXP2.ANOVA),residuals(EXP2.ANOVA)) #display residuals versus fitter, normal QQ plot, leverage plot
qqnorm(residuals(EXP2.ANOVA)) # QQ plot
# post-hoc
exp2.resp.ph <- lsmeans(EXP2.ANOVA, pairwise ~  Init.treat * Day)# pariwise Tukey Post-hoc test between repeated treatments
# post-hoc
exp2.resp.ph <- lsmeans(EXP2.ANOVA, pairwise ~  Init.treat*Sec.treat*Day)# pariwise Tukey Post-hoc test between repeated treatments
exp2.resp.ph # view post hoc summary
E1.pairs.RESP.05 <- cld(exp2.resp.ph, alpha=.05, Letters=letters) #list pairwise tests and letter display p < 0.05
E1.pairs.RESP.05 # NO PAIRWISE DIFFERENCES
E1.pairs.RESP.1 <- cld(exp2.resp.ph, alpha=.1, Letters=letters) #list pairwise tests and letter display p < 0.1
E1.pairs.RESP.1 # maringal differences between elevated (day 5) and ambient (days 2 and 5)
EXP2.ANOVA <- aov(FINALresp ~ Init.treat*Sec.treat*Day, data = resp_EXP2_2.4.6.) # run anova on treatment and time
anova(EXP2.ANOVA) # significant effect of time and marginal effect from secondary treatment
library(lsmeans)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
library(Rmisc)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
library(multcompView)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
library(dplyr)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
library(plotrix)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
library(car)
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
# sumamry tables to calculate the mean difference between treatments
sumresp_EXP2 <- summarySE(resp_EXP2_2.4.6.,
measurevar="FINALresp",
groupvars=c("Date","Sec.treat")) # means by date
sumresp_EXP2
# get percent difference
sumresp_EXP2_means <- summarySE(sumresp_EXP2,
measurevar="FINALresp",
groupvars=c("Sec.treat")) # means by treatment (from previous means of date)
sumresp_EXP2_means
percentdiff <- ((sumresp_EXP2_means[1,3] - sumresp_EXP2_means[2,3])/sumresp_EXP2_means[1,3])*100 # calculate the percent difference between elevated and ambient pCO2
percentdiff # view the data - 25% metabolic depression under elevated pCO2
EXP2.ANOVA <- aov(sqrt_FINALresp ~ Init.treat*Sec.treat*Day, data = resp_EXP2_2.4.6.) # run anova on treatment and time
anova(EXP2.ANOVA) # significant effect of time and secondary treatment
# post-hoc
exp2.resp.ph <- lsmeans(EXP2.ANOVA, pairwise ~  Init.treat*Sec.treat*Day)# pariwise Tukey Post-hoc test between repeated treatments
exp2.resp.ph # view post hoc summary
E1.pairs.RESP.05 <- cld(exp2.resp.ph, alpha=.05, Letters=letters) #list pairwise tests and letter display p < 0.05
E1.pairs.RESP.05 # NO PAIRWISE DIFFERENCES
E1.pairs.RESP.1 <- cld(exp2.resp.ph, alpha=.1, Letters=letters) #list pairwise tests and letter display p < 0.1
E1.pairs.RESP.1 # maringal differences between elevated (day 5) and ambient (days 2 and 5)
summary(lm(resp_EXP2[,1]~resp_EXP2$FINALresp))
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2$FINALresp)) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
max(resp_EXP2$FINALresp)
resp2.0 <- resp_EXP2 %>% filter(resp_EXP2$FINALresp < 0.7)
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_2.4.6 <- subset(resp2.0, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
# ANALYSIS
# normality test - data tranformation
shapiro.test(resp_EXP2_2.4.6$FINALresp) # not normal
hist(resp_EXP2_2.4.6$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2_2.4.6$sqrt_FINALresp <- sqrt(resp_EXP2_2.4.6$FINALresp)
shapiro.test(resp_EXP2_2.4.6$sqrt_FINALres) #  transformation is now normal
hist(resp_EXP2_2.4.6$sqrt_FINALres) # view histogram of sqrt transformation
# Three-way ANOVA (not transformed)
resp_EXP2_2.4.6$Day <- as.factor(resp_EXP2_2.4.6$Day) # treat day as a character
EXP2.ANOVA <- aov(FINALresp ~ Init.treat*Sec.treat*Day, data = resp_EXP2_2.4.6.) # run anova on treatment and time
anova(EXP2.ANOVA) # significant effect of time and secondary treatment
# diagnostic tests and plots of model residuals (not transformed)
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP2.ANOVA)) #plot histogram of residuals
shapiro.test(residuals(EXP2.ANOVA)) # Shapiro test - residuals are not normal
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
boxplot(residuals(EXP2.ANOVA)) #plot boxplot of residuals
plot(fitted(EXP2.ANOVA),residuals(EXP2.ANOVA)) #display residuals versus fitter, normal QQ plot, leverage plot
qqnorm(residuals(EXP2.ANOVA)) # QQ plot
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_2.4.6 <- subset(resp2.0, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
ma(resp_EXP2_2.4.6$FINALresp)
max(resp_EXP2_2.4.6$FINALresp)
# subset dataset for Day 0 and days 2 4 and 6
resp_EXP2_2.4.6 <- subset(resp2.0, Day!=0) # subset out pre-exposure measurements on day 0 (day 24 of experiment)
max(resp_EXP2_2.4.6$FINALresp)
# ANALYSIS
# normality test - data tranformation
shapiro.test(resp_EXP2_2.4.6$FINALresp) # not normal
hist(resp_EXP2_2.4.6$FINALresp) # positive or right skewed - need to transform the data
# transform via sqrt for normal distrubtion via shapro wilk test
resp_EXP2_2.4.6$sqrt_FINALresp <- sqrt(resp_EXP2_2.4.6$FINALresp)
shapiro.test(resp_EXP2_2.4.6$sqrt_FINALres) #  transformation is now normal
hist(resp_EXP2_2.4.6$sqrt_FINALres) # view histogram of sqrt transformation
# Three-way ANOVA (not transformed)
resp_EXP2_2.4.6$Day <- as.factor(resp_EXP2_2.4.6$Day) # treat day as a character
EXP2.ANOVA <- aov(FINALresp ~ Init.treat*Sec.treat*Day, data = resp_EXP2_2.4.6.) # run anova on treatment and time
anova(EXP2.ANOVA) # significant effect of time and secondary treatment
# diagnostic tests and plots of model residuals (not transformed)
par(mfrow=c(1,3)) #set plotting configuration
par(mar=c(1,1,1,1)) #set margins for plots
hist(residuals(EXP2.ANOVA)) #plot histogram of residuals
shapiro.test(residuals(EXP2.ANOVA)) # Shapiro test - residuals are not normal
leveneTest(EXP2.ANOVA) ## Levene's test for homogeneity  - residuals are normal
boxplot(residuals(EXP2.ANOVA)) #plot boxplot of residuals
plot(fitted(EXP2.ANOVA),residuals(EXP2.ANOVA)) #display residuals versus fitter, normal QQ plot, leverage plot
qqnorm(residuals(EXP2.ANOVA)) # QQ plot
# post-hoc
exp2.resp.ph <- lsmeans(EXP2.ANOVA, pairwise ~  Init.treat*Sec.treat*Day)# pariwise Tukey Post-hoc test between repeated treatments
exp2.resp.ph # view post hoc summary
E1.pairs.RESP.05 <- cld(exp2.resp.ph, alpha=.05, Letters=letters) #list pairwise tests and letter display p < 0.05
E1.pairs.RESP.05 # NO PAIRWISE DIFFERENCES
E1.pairs.RESP.1 <- cld(exp2.resp.ph, alpha=.1, Letters=letters) #list pairwise tests and letter display p < 0.1
E1.pairs.RESP.1 # maringal differences between elevated (day 5) and ambient (days 2 and 5)
# sumamry tables to calculate the mean difference between treatments
sumresp_EXP2 <- summarySE(resp_EXP2_2.4.6.,
measurevar="FINALresp",
groupvars=c("Date","Init.treat")) # means by date
sumresp_EXP2
# get percent difference
sumresp_EXP2_means <- summarySE(sumresp_EXP2,
measurevar="Init.treat",
groupvars=c("Sec.treat")) # means by treatment (from previous means of date)
sumresp_EXP2_means
percentdiff <- ((sumresp_EXP2_means[1,3] - sumresp_EXP2_means[2,3])/sumresp_EXP2_means[1,3])*100 # calculate the percent difference between elevated and ambient pCO2
percentdiff # view the data - 25% metabolic depression under elevated pCO2
# sumamry tables to calculate the mean difference between treatments
sumresp_EXP2 <- summarySE(resp_EXP2_2.4.6.,
measurevar="FINALresp",
groupvars=c("Date","Init.treat")) # means by date
sumresp_EXP2
# get percent difference
sumresp_EXP2_means <- summarySE(sumresp_EXP2,
measurevar="Init.treat",
groupvars=c("Init.treat")) # means by treatment (from previous means of date)
# sumamry tables to calculate the mean difference between treatments
sumresp_EXP2 <- summarySE(resp_EXP2_2.4.6.,
measurevar="FINALresp",
groupvars=c("Date","Init.treat")) # means by date
sumresp_EXP2
# sumamry tables to calculate the mean difference between treatments
sumresp_EXP2 <- summarySE(resp_EXP2_2.4.6.,
measurevar="FINALresp",
groupvars=c("Date","Init.treat")) # means by date
sumresp_EXP2
# get percent difference
sumresp_EXP2_means <- summarySE(sumresp_EXP2,
measurevar="Init.treat",
groupvars=c("Init.treat")) # means by treatment (from previous means of date)
# get percent difference
sumresp_EXP2_means <- summarySE(sumresp_EXP2,
measurevar="FINALresp",
groupvars=c("Init.treat")) # means by treatment (from previous means of date)
sumresp_EXP2_means
percentdiff <- ((sumresp_EXP2_means[1,3] - sumresp_EXP2_means[2,3])/sumresp_EXP2_means[1,3])*100 # calculate the percent difference between elevated and ambient pCO2
percentdiff # view the data - 25% metabolic depression under elevated pCO2
summary(lm(newdata_resp_EXP2_ALL_1[,8]~newdata_resp_EXP2_ALL_1[,2]))  # Adjusted R-squared: 0.6221  use these paramenters - alpha0.4 and truncation at 10 - 25 mins
plot(newdata_resp_EXP2_ALL_1[,2],newdata_resp_EXP2_ALL_1[,9])
# check the strength of Finalresp to the reference; RESULT: Multiple R-squared:  0.8889,	Adjusted R-squared:  0.8878
plot(resp_EXP2[,1],resp_EXP2$FINALresp, main= "Ref vs. FINALresp")
summary(lm(resp_EXP2[,1]~resp_EXP2$FINALresp))
ggplot(resp_EXP2, aes(x = resp_EXP2[,1], y = resp_EXP2$FINALresp)) +
geom_point() +
geom_smooth(method = 'loess') +
geom_text(aes(label = resp_EXP2$ID), position = position_nudge(y = -0.01))
rm(list=ls()) # removes all prior objects
# Install packages if not already in your library
if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install.packages('LoLinR')
# Load packages and pacage version/date/import/depends info
library(LoLinR) # Version: version 0.0.0.9000
setwd("C:/Users/samjg/Documents/My_Projects/Juvenile_geoduck_OA/RAnalysis/Data/SDR_data") # set working directory
main<-getwd()
#CHANGE HERE TO CALL DATAFILES
path<-"All_data_csv" #the location of all respiration csv files
respfile<-"20180813_resp_Day6_RUN2_Oxygen.csv" # call each file individually for this initial diagnostic
resp<-read.csv(file.path(path,respfile), header=T, sep=",", na.string="NA", as.is=T) # call data
resp # view the data
# assign headers
resp.data <- resp[,c(1:26)] # assign headers, select columns = 26 total (Date + Time + 24 vials on SDR plate)
#  "RUN2" files
# Tray H2 & Tray H3; for files named "RUN2"
colnames(resp.data) <- c("Date", "minutes",
# Row 1 (A1, B1, C1, D1)
"H2_T_A1", "H2_B_B1", "H2_T_blank_C1", "H2_B_blank_D1",
# Row 2 (A2, B2, C2, D2)
"H2_T_A2","H2_B_B2", "H2_T_blank_C2", "H2_B_blank_D2",
# Row 3 (A3, B3, C3, D3)
"H2_T_A3", "H2_B_B3", "H2_T_blank_C3", "H2_B_blank_D3",
# Row 4 (A4, B4, C4, D4)
"H3_T_A4", "H3_B_B4", "H3_T_blank_C4", "H3_B_blank_D4",
# Row 5 (A5, B5, C5, D5)
"H3_T_A5", "H3_B_B5", "H3_T_blank_C5", "H3_B_blank_D5",
# Row 6 (A6, B6, C6, D6)
"H3_T_A6", "H3_B_B6", "H3_T_blank_C6", "H3_B_blank_D6") #rename columns
# fill this in and press Cnrt A + enter for each vial
Date <- "20180813"
tank_name <- "H3_T"
vial_pos <- "A6"
ID <- "H3_T_A6"
tank_vial <- resp.data$H3_T_A6
alpha <- 0.2
# LoLin R model - "rankLogReg"
model<-rankLocReg(
xall=resp.data$minutes,yall=tank_vial, # call the repiration data by ID of the tank and vial position in the 24-well SDR dish
alpha=0.2, method="pc", verbose=TRUE) # alpha 0.2 and Lpc as default criterion
plot(model, rank=1) # diagnostic plot - view for proximity of Lpc to the peak distribution of local linear regressions
# LoLin R model - "rankLogReg"
model<-rankLocReg(
xall=resp.data$minutes,yall=tank_vial, # call the repiration data by ID of the tank and vial position in the 24-well SDR dish
alpha=0.2, method="pc", verbose=TRUE) # alpha 0.2 and Lpc as default criterion
plot(model, rank=1) # diagnostic plot - view for proximity of Lpc to the peak distribution of local linear regressions
# LoLin R model - "rankLogReg"
model<-rankLocReg(
xall=resp.data$minutes,yall=tank_vial, # call the repiration data by ID of the tank and vial position in the 24-well SDR dish
alpha=0.2, method="pc", verbose=TRUE) # alpha 0.2 and Lpc as default criterion
plot(model, rank=1) # diagnostic plot - view for proximity of Lpc to the peak distribution of local linear regressions
resp.data
